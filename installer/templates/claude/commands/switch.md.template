---
name: switch
description: Compact session and switch to another Agent Persona
---

# SESSION COMPACTION & AGENT SWITCH PROTOCOL

## ðŸš€ PARALLEL CONTEXT COMPACTION & TRANSFER (MANDATORY)

**CRITICAL**: When switching agents, you MUST execute parallel session compaction and context transfer:

```
I'm preparing to compact this session and switch to the [Target Agent]. Let me preserve context and initialize the new agent in parallel.

*Executing parallel switch tasks:*
[Use Task tool - ALL in single function_calls block]
- Task 1: Create comprehensive session summary and key insights
- Task 2: Archive current work artifacts and decisions
- Task 3: Load target persona configuration from {{AP_ROOT}}/personas/{persona}.md
- Task 4: Generate transition brief for the incoming agent
- Task 5: Load target persona's templates and workspace setup
```

### Switch Task Prompts:
1. "Create a comprehensive summary of all work done in this session, including achievements, decisions, and learnings"
2. "Identify and archive all important work artifacts, code, documents, and deliverables from this session"
3. "Load the full target persona configuration including their initialization protocol and capabilities"
4. "Generate a focused transition brief highlighting what the incoming agent needs to know to continue effectively"
5. "Load the target persona's primary templates, checklists, and workspace requirements"

### Post-Switch Protocol:
After ALL tasks complete:
1. Present session compaction summary to user
2. Archive session notes (if configured)
3. Activate target persona with their initialization protocol
4. Target persona executes their own parallel initialization
5. Confirm: "âœ“ Session compacted and switched to [Target Agent] with full context"

## Usage:
`/switch <persona> [instructions/story]`

## Session Compaction Benefits:
- **Clean Context**: Reduces token usage by summarizing rather than carrying full history
- **Clear Transitions**: Provides explicit handoff points between work phases
- **Better Organization**: Archives work by session for future reference
- **Focused Work**: New agent starts fresh but informed

## Available Personas:
- `ap` or `orchestrator` - AP Orchestrator (default)
- `dev` or `developer` - Developer agent
- `architect` - System architect
- `design` or `design-architect` - Design/UI architect
- `analyst` - Business/Requirements analyst
- `qa` - Quality assurance
- `pm` - Product manager
- `po` - Product owner
- `sm` - Scrum master

## Direct Activation Alternative:
Each persona now has its own activation command with full initialization:
- `/ap` - AP Orchestrator
- `/analyst` - Analyst
- `/pm` - Product Manager
- `/architect` - System Architect
- `/design-architect` - Design Architect
- `/po` - Product Owner
- `/sm` - Scrum Master
- `/dev` - Developer
- `/qa` - Quality Assurance

Use direct commands for fresh activation with full initialization protocol.

## Switch Process:

### Phase 1: Session Compaction
Parallel execution of:
1. Comprehensive work summary
2. Decision documentation
3. Artifact archival
4. Insight extraction
5. Transition preparation

### Phase 2: Context Transfer
Simultaneous:
1. Load target persona
2. Prepare workspace
3. Transfer relevant context
4. Set up templates

### Phase 3: Agent Activation
The target agent will:
1. Acknowledge the switch with compacted context
2. Execute their initialization protocol
3. Begin work with focused direction

## Examples:

**Switch to developer after planning:**
`/switch dev`
â†’ Compacts planning work, switches to dev with summary

**Switch to developer with specific story:**
`/switch dev "Work on story 1.2"`
â†’ Compaction + story focus

**Switch to architect for review:**
`/switch architect "Review the current system architecture"`
â†’ Compaction + review directive

**Switch to QA after development:**
`/switch qa "Test the completed features"`
â†’ Compacts dev work, switches to QA with testing focus

## Session Compaction Format:

```markdown
## Session Compaction Summary

### Session Overview:
- Agent: [Current Agent]  
- Duration: [Time active]
- Primary Focus: [Main work area]

### Achievements:
- [Major accomplishments]
- [Deliverables created]
- [Problems solved]

### Key Decisions:
- [Important choices made]
- [Rationale provided]

### Artifacts Created:
- [Files/documents]
- [Code/designs]
- [Plans/strategies]

### Insights & Learnings:
- [Important discoveries]
- [Patterns identified]
- [Recommendations]

### For Next Agent ([Target]):
- Priority: [What to focus on]
- Context: [Essential background]
- Resources: [Key artifacts to review]
- Warnings: [Things to watch out for]
```

## Best Practices:

1. **Natural Breakpoints**: Switch at logical work boundaries
2. **Complete Thoughts**: Finish current analysis or implementation
3. **Document Rationale**: Ensure decisions are explained
4. **Highlight Blockers**: Make issues visible to next agent
5. **Focus Instructions**: Be specific about next steps

Remember: The switch command provides the cleanest transition between agents, reducing context overhead while preserving essential information. Use it when changing work phases or when token usage needs optimization.